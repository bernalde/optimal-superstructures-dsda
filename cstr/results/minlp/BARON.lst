GAMS 28.1.0  r5b48834 Released Aug  2, 2019 WEX-WEI x86 64bit/MS Windows 09/13/19 01:21:39 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1
   2  *------------------------SETS---------------------------------------------
      ------
   3  set N "Superstructure units" /1*5/;
   4  set I "Chemical components" /A,B/;
   5  alias(N,N1);
   6
   7  *-----------------------PARAMETERS AND SCALARS----------------------------
      ------
   8  ***Kinetic parameters
   9  scalar m1 "Partial order of reaction 1 []" /1/;
  10  scalar m2 "Partial order of reaction 2 []" /1/;
  11  scalar k "kinetic constant [L/(mol*s)]"/2/;
  12  ***Feed parameters
  13  scalar QF0 "Inlet volumetric flow [L/s]" /1/;
  14  parameter C0(i) "Initial concentration of reagents [mol/L]"
  15  /
  16  A 0.99
  17  B 0.01
  18  /
  19  ;
  20  parameter F0(i) "Inlet molar flow [mol/s]";
  21  F0(i)=C0(i)*QF0;
  22
  23  *-----------------------BINARY VARIABLES AND CONSTRAINTS------------------
      ------
  24  ***Independent binary variables
  25  binary variable yf(n) "Location of the last reactor (feed reactor) in the
      superstructure";
  26  binary variable yr(n) "Location of the recycle flow";
  27  ***Dependent binary variables
  28  positive variable yp(n) "Unit operation. 1: Reaction. 0: Simple input-outp
      ut";
  29  equation defyp(n) "Definition of yp(n) in terms of the independent binary
      terms";
  30  defyp(n)..yp(n)=e=1-(sum(n1$(ord(n1) <= ord(n)),yf(n1))-yf(n));
  31  ***Logical constraints
  32  equations logic1 "There is only one 'final' reactor in the superstructure"
      ;
  33  equation logic2   "There is only one recycle location";
  34  equation logic3(n) "The recycle can be located at n if there is a reaction
       operation";
  35  logic1..sum(n,yf(n))=e=1;
  36  logic2..sum(n,yr(n))=e=1;
  37  logic3(n)..yr(n)=l=yp(n);
  38
  39  *-----------------------REAL VARIABLES------------------------------------
      ------
  40  ***Network variables
  41  positive variable Q(n) "Outlet flow rate of the superstricture unit [L/s]"
      ;
  42  positive variable F(i,n) "Molar flow [mol/s]";
  43  variable  rate(i,n) "Reaction rate [mol/(L*s)]";
  44  positive variable V(n) "Reactor volume [L]";
  45  ***Splitter variables
  46  positive variable QR "Recycle flow rate  [L/s]";
  47  positive variable QP "Product flow rate  [L/s]";
  48  positive variable R(i) "Recycle molar flow [mol/s]";
  49  positive variable P(i) "Product molar flow [mol/s]";
  50
  51  *-----------------------SUPERSTRUCTURE CONSTRAINTS------------------------
      ------
  52
  53  ***Kinetic constraints
  54  equation net_rate(i,n) "Reactor Network: Reaction rates";
  55  net_rate(i,n)..(rate('A',n)*((Q(n))**m1)*((Q(n))**m2)+k*((F('A',n))**m1)*(
      (F('B',n))**m2))$(ord(i) eq 1)+(rate('B',n)+rate('A',n))$(ord(i) eq 2)=e=0
      ;
  56
  57  ***Network constraints
  58  equation net_comp(i,n) "Reactor Network: Component molar balance";
  59  equation net_cont(n) "Reactor Network: continuity equation";
  60  net_comp(i,n)$(ord(n) ne card(n))..F(i,n+1)+yr(n)*R(i)-F(i,n)+yp(n)*rate(i
      ,n)*V(n)=e=0;
  61  net_cont(n)$(ord(n) ne card(n))..Q(n+1)+yr(n)*QR-Q(n)=e=0;
  62
  63
  64  ***Feed unit constraints
  65  equation feed_comp(i,n) "Feed unit: Component molar balance";
  66  equation feed_cont(n) "Feed unit: continuity equation";
  67  feed_comp(i,n)$(ord(n) eq card(n))..F0(i)+yr(n)*R(i)-F(i,n)+yp(n)*rate(i,n
      )*V(n)=e=0;
  68  feed_cont(n)$(ord(n) eq card(n))..QF0+yr(n)*QR-Q(n)=e=0;
  69
  70  ***Splitter constraints
  71  equation spl_comp(i) "Splitter: Component molar balance";
  72  equation spl_cont "Splitter: continuity equation";
  73  equation spl_ad(i) "Splitter: additional splitter constraints";
  74  spl_comp(i)..F(i,'1')-P(i)-R(i)=e=0;
  75  spl_cont..Q('1')-QP-QR=e=0;
  76  spl_ad(i)..P(i)*Q('1')-F(i,'1')*QP=e=0;
  77
  78  *---------------------VOLUMEN CONSTRAINT----------------------------------
      ------
  79  equation eqvol(n);
  80  eqvol(n)$(ord(n) ne 1)..V(n)=e=V(n-1);
  81
  82  *---------------------PRODUCT QUALITY CONSTRAINT--------------------------
      ------
  83  equation qual;
  84  qual..QP*0.95=e=P('B');
  85  *----------------------OBJECTIVE FUNCTION---------------------------------
      ------
  86
  87  variables zobj;
  88
  89  equation Fobj;
  90  Fobj..zobj=e=sum(n,V(n)*yp(n));
  91
  92  *-----------------------BOUNDS ON VARIABLES-------------------------------
      ------
  93  Q.up(n)=10;
  94  QR.up=10;
  95  QP.up=10;
  96  R.up(i)=10;
  97  P.up(i)=10;
  98  F.up(i,n)=10;
  99  rate.lo(i,n)=-10;
 100  rate.up(i,n)=10;
 101  V.up(n)=10;
 102  *----------------------VARIABLE INITIALIZATION----------------------------
      ------
 103  yf.l(n)=0;
 104  yr.l(n)=0;
 105  yp.l(n)=0;
 106  Q.l(n)=0;
 107  F.l(i,n)=0;
 108  rate.l(i,n)=0;
 109  V.l(n)=0;
 110  QR.l=0;
 111  QP.l=0;
 112  R.l(i)=0;
 113  P.l(i)=0;
 114  *----------------------SOLUTION-------------------------------------------
      ------
 115  model SUP_CSTR /all/;
 116  SUP_CSTR.optcr=0;
 117  *SUP_CSTR.optca=0;
 118  *execute_loadpoint "in";
 119  option reslim = 18000;
 120  option minlp=baron;
 121  *option nlp = baron;
 122  option threads=0;
 131  yf.l('1') = 1;
 132  yr.l('1') = 1;
 133  SUP_CSTR.OptFile = 1;
 134  option sysout = on ;
 135  solve SUP_CSTR using minlp minimizing zobj;
 136  *execute_unload "BARON"
 137
 138
 139
 140
 141


COMPILATION TIME     =        0.000 SECONDS      3 MB  28.1.0 r5b48834 WEX-WEI
GAMS 28.1.0  r5b48834 Released Aug  2, 2019 WEX-WEI x86 64bit/MS Windows 09/13/19 01:21:39 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE SUP_CSTR Using MINLP From line 135


---- defyp  =E=  Definition of yp(n) in terms of the independent binary terms

defyp(1)..  yp(1) =E= 1 ; (LHS = 0, INFES = 1 ****)

defyp(2)..  yf(1) + yp(2) =E= 1 ; (LHS = 1)

defyp(3)..  yf(1) + yf(2) + yp(3) =E= 1 ; (LHS = 1)

REMAINING 2 ENTRIES SKIPPED


---- logic1  =E=  There is only one 'final' reactor in the superstructure

logic1..  yf(1) + yf(2) + yf(3) + yf(4) + yf(5) =E= 1 ; (LHS = 1)


---- logic2  =E=  There is only one recycle location

logic2..  yr(1) + yr(2) + yr(3) + yr(4) + yr(5) =E= 1 ; (LHS = 1)


---- logic3  =L=  The recycle can be located at n if there is a reaction operati
                  on

logic3(1)..  yr(1) - yp(1) =L= 0 ; (LHS = 1, INFES = 1 ****)

logic3(2)..  yr(2) - yp(2) =L= 0 ; (LHS = 0)

logic3(3)..  yr(3) - yp(3) =L= 0 ; (LHS = 0)

REMAINING 2 ENTRIES SKIPPED


---- net_rate  =E=  Reactor Network: Reaction rates

net_rate(A,1)..  (0)*Q(1) + (0)*F(A,1) + (0)*F(B,1) + (0)*rate(A,1) =E= 0 ;

      (LHS = 0)

net_rate(A,2)..  (0)*Q(2) + (0)*F(A,2) + (0)*F(B,2) + (0)*rate(A,2) =E= 0 ;

      (LHS = 0)

net_rate(A,3)..  (0)*Q(3) + (0)*F(A,3) + (0)*F(B,3) + (0)*rate(A,3) =E= 0 ;

      (LHS = 0)

REMAINING 7 ENTRIES SKIPPED


---- net_comp  =E=  Reactor Network: Component molar balance

net_comp(A,1)..  (0)*yr(1) + (0)*yp(1) - F(A,1) + F(A,2) + (0)*rate(A,1)

      + (0)*V(1) + (1)*R(A) =E= 0 ; (LHS = 0)

net_comp(A,2)..  (0)*yr(2) + (0)*yp(2) - F(A,2) + F(A,3) + (0)*rate(A,2)

      + (0)*V(2) + (0)*R(A) =E= 0 ; (LHS = 0)

net_comp(A,3)..  (0)*yr(3) + (0)*yp(3) - F(A,3) + F(A,4) + (0)*rate(A,3)

      + (0)*V(3) + (0)*R(A) =E= 0 ; (LHS = 0)

REMAINING 5 ENTRIES SKIPPED


---- net_cont  =E=  Reactor Network: continuity equation

net_cont(1)..  (0)*yr(1) - Q(1) + Q(2) + (1)*QR =E= 0 ; (LHS = 0)

net_cont(2)..  (0)*yr(2) - Q(2) + Q(3) + (0)*QR =E= 0 ; (LHS = 0)

net_cont(3)..  (0)*yr(3) - Q(3) + Q(4) + (0)*QR =E= 0 ; (LHS = 0)

REMAINING ENTRY SKIPPED


---- feed_comp  =E=  Feed unit: Component molar balance

feed_comp(A,5)..  (0)*yr(5) + (0)*yp(5) - F(A,5) + (0)*rate(A,5) + (0)*V(5)

      + (0)*R(A) =E= -0.99 ; (LHS = 0, INFES = 0.99 ****)

feed_comp(B,5)..  (0)*yr(5) + (0)*yp(5) - F(B,5) + (0)*rate(B,5) + (0)*V(5)

      + (0)*R(B) =E= -0.01 ; (LHS = 0, INFES = 0.01 ****)


---- feed_cont  =E=  Feed unit: continuity equation

feed_cont(5)..  (0)*yr(5) - Q(5) + (0)*QR =E= -1 ; (LHS = 0, INFES = 1 ****)


---- spl_comp  =E=  Splitter: Component molar balance

spl_comp(A)..  F(A,1) - R(A) - P(A) =E= 0 ; (LHS = 0)

spl_comp(B)..  F(B,1) - R(B) - P(B) =E= 0 ; (LHS = 0)


---- spl_cont  =E=  Splitter: continuity equation

spl_cont..  Q(1) - QR - QP =E= 0 ; (LHS = 0)


---- spl_ad  =E=  Splitter: additional splitter constraints

spl_ad(A)..  (0)*Q(1) + (0)*F(A,1) + (0)*QP + (0)*P(A) =E= 0 ; (LHS = 0)

spl_ad(B)..  (0)*Q(1) + (0)*F(B,1) + (0)*QP + (0)*P(B) =E= 0 ; (LHS = 0)


---- eqvol  =E=

eqvol(2)..  - V(1) + V(2) =E= 0 ; (LHS = 0)

eqvol(3)..  - V(2) + V(3) =E= 0 ; (LHS = 0)

eqvol(4)..  - V(3) + V(4) =E= 0 ; (LHS = 0)

REMAINING ENTRY SKIPPED


---- qual  =E=

qual..  0.95*QP - P(B) =E= 0 ; (LHS = 0)


---- Fobj  =E=

Fobj..  (0)*yp(1) + (0)*yp(2) + (0)*yp(3) + (0)*yp(4) + (0)*yp(5) + (0)*V(1)

      + (0)*V(2) + (0)*V(3) + (0)*V(4) + (0)*V(5) + zobj =E= 0 ; (LHS = 0)

GAMS 28.1.0  r5b48834 Released Aug  2, 2019 WEX-WEI x86 64bit/MS Windows 09/13/19 01:21:39 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE SUP_CSTR Using MINLP From line 135


---- yf  Location of the last reactor (feed reactor) in the superstructure

yf(1)
                (.LO, .L, .UP, .M = 0, 1, 1, 0)
        1       defyp(2)
        1       defyp(3)
        1       defyp(4)
        1       defyp(5)
        1       logic1

yf(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       defyp(3)
        1       defyp(4)
        1       defyp(5)
        1       logic1

yf(3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       defyp(4)
        1       defyp(5)
        1       logic1

REMAINING 2 ENTRIES SKIPPED

---- yr  Location of the recycle flow

yr(1)
                (.LO, .L, .UP, .M = 0, 1, 1, 0)
        1       logic2
        1       logic3(1)
       (0)      net_comp(A,1)
       (0)      net_comp(B,1)
       (0)      net_cont(1)

yr(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       logic2
        1       logic3(2)
       (0)      net_comp(A,2)
       (0)      net_comp(B,2)
       (0)      net_cont(2)

yr(3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       logic2
        1       logic3(3)
       (0)      net_comp(A,3)
       (0)      net_comp(B,3)
       (0)      net_cont(3)

REMAINING 2 ENTRIES SKIPPED

---- yp  Unit operation. 1: Reaction. 0: Simple input-output

yp(1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       defyp(1)
       -1       logic3(1)
       (0)      net_comp(A,1)
       (0)      net_comp(B,1)
       (0)      Fobj

yp(2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       defyp(2)
       -1       logic3(2)
       (0)      net_comp(A,2)
       (0)      net_comp(B,2)
       (0)      Fobj

yp(3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       defyp(3)
       -1       logic3(3)
       (0)      net_comp(A,3)
       (0)      net_comp(B,3)
       (0)      Fobj

REMAINING 2 ENTRIES SKIPPED

---- Q  Outlet flow rate of the superstricture unit [L/s]

Q(1)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       (0)      net_rate(A,1)
       -1       net_cont(1)
        1       spl_cont
       (0)      spl_ad(A)
       (0)      spl_ad(B)

Q(2)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       (0)      net_rate(A,2)
        1       net_cont(1)
       -1       net_cont(2)

Q(3)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       (0)      net_rate(A,3)
        1       net_cont(2)
       -1       net_cont(3)

REMAINING 2 ENTRIES SKIPPED

---- F  Molar flow [mol/s]

F(A,1)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       (0)      net_rate(A,1)
       -1       net_comp(A,1)
        1       spl_comp(A)
       (0)      spl_ad(A)

F(A,2)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       (0)      net_rate(A,2)
        1       net_comp(A,1)
       -1       net_comp(A,2)

F(A,3)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       (0)      net_rate(A,3)
        1       net_comp(A,2)
       -1       net_comp(A,3)

REMAINING 7 ENTRIES SKIPPED

---- rate  Reaction rate [mol/(L*s)]

rate(A,1)
                (.LO, .L, .UP, .M = -10, 0, 10, 0)
       (0)      net_rate(A,1)
        1       net_rate(B,1)
       (0)      net_comp(A,1)

rate(A,2)
                (.LO, .L, .UP, .M = -10, 0, 10, 0)
       (0)      net_rate(A,2)
        1       net_rate(B,2)
       (0)      net_comp(A,2)

rate(A,3)
                (.LO, .L, .UP, .M = -10, 0, 10, 0)
       (0)      net_rate(A,3)
        1       net_rate(B,3)
       (0)      net_comp(A,3)

REMAINING 7 ENTRIES SKIPPED

---- V  Reactor volume [L]

V(1)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       (0)      net_comp(A,1)
       (0)      net_comp(B,1)
       -1       eqvol(2)
       (0)      Fobj

V(2)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       (0)      net_comp(A,2)
       (0)      net_comp(B,2)
        1       eqvol(2)
       -1       eqvol(3)
       (0)      Fobj

V(3)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       (0)      net_comp(A,3)
       (0)      net_comp(B,3)
        1       eqvol(3)
       -1       eqvol(4)
       (0)      Fobj

REMAINING 2 ENTRIES SKIPPED

---- QR  Recycle flow rate  [L/s]

QR
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       (1)      net_cont(1)
       (0)      net_cont(2)
       (0)      net_cont(3)
       (0)      net_cont(4)
       (0)      feed_cont(5)
       -1       spl_cont


---- QP  Product flow rate  [L/s]

QP
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       -1       spl_cont
       (0)      spl_ad(A)
       (0)      spl_ad(B)
        0.95    qual


---- R  Recycle molar flow [mol/s]

R(A)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       (1)      net_comp(A,1)
       (0)      net_comp(A,2)
       (0)      net_comp(A,3)
       (0)      net_comp(A,4)
       (0)      feed_comp(A,5)
       -1       spl_comp(A)

R(B)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       (1)      net_comp(B,1)
       (0)      net_comp(B,2)
       (0)      net_comp(B,3)
       (0)      net_comp(B,4)
       (0)      feed_comp(B,5)
       -1       spl_comp(B)


---- P  Product molar flow [mol/s]

P(A)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       -1       spl_comp(A)
       (0)      spl_ad(A)

P(B)
                (.LO, .L, .UP, .M = 0, 0, 10, 0)
       -1       spl_comp(B)
       (0)      spl_ad(B)
       -1       qual


---- zobj

zobj
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Fobj

GAMS 28.1.0  r5b48834 Released Aug  2, 2019 WEX-WEI x86 64bit/MS Windows 09/13/19 01:21:39 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE SUP_CSTR Using MINLP From line 135


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS           48
BLOCKS OF VARIABLES          12     SINGLE VARIABLES           52
NON ZERO ELEMENTS           190     NON LINEAR N-Z             98
DERIVATIVE POOL              20     CONSTANT POOL              16
CODE LENGTH                 227     DISCRETE VARIABLES         10


GENERATION TIME      =        0.015 SECONDS      4 MB  28.1.0 r5b48834 WEX-WEI


EXECUTION TIME       =        0.047 SECONDS      4 MB  28.1.0 r5b48834 WEX-WEI
GAMS 28.1.0  r5b48834 Released Aug  2, 2019 WEX-WEI x86 64bit/MS Windows 09/13/19 01:21:39 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE SUP_CSTR Using MINLP From line 135


               S O L V E      S U M M A R Y

     MODEL   SUP_CSTR            OBJECTIVE  zobj
     TYPE    MINLP               DIRECTION  MINIMIZE
     SOLVER  BARON               FROM LINE  135

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE                3.0615

 RESOURCE USAGE, LIMIT        409.670     18000.000
 ITERATION COUNT, LIMIT         0    2000000000
 EVALUATION ERRORS              0             0

GAMS/BARON       28.1.0 r5b48834 Released Aug 02, 2019 WEI x86 64bit/MS Window

BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
Parts of the BARON software were created at the
University of Illinois at Urbana-Champaign.

--- Using Option File
Reading parameter(s) from "C:\Users\bernalde\Documents\gamsdir\projdir\baron.opt
                                                                               "
>>  *WantDual 1
>>  *FirstFeas 1
>>  *NumSol 10
>>  *results 1
>>  *ResName "sumary.dat"
>>  *EpsR 0.0001
Finished reading from "C:\Users\bernalde\Documents\gamsdir\projdir\baron.opt"

===========================================================================
 BARON version 19.7.13. Built: WIN-64 Sat Jul 13 11:49:21 EDT 2019

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as:

 Kilinc, M. and N. V. Sahinidis, Exploiting integrality in the global
 optimization of mixed-integer nonlinear programming problems in BARON,
 Optimization Methods and Software, 33, 540-562, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: ILOG CPLEX
 For NLP: MINOS, SNOPT, GAMS external NLP, IPOPT, FILTERSD, FILTERSQP

Solution      = 3.06154073212274  found at node 8998
Best possible = 3.06154072906
Absolute gap  = 3.06274072769952E-9  optca = 1E-9
Relative gap  = 1.00039195806353E-9  optcr = 1E-9
  (Note that BARON uses a different formula to compute the relative gap as
   was used for the above reported value.)


---- EQU defyp  Definition of yp(n) in terms of the independent binary terms

     LOWER     LEVEL     UPPER

1     1.000     1.000     1.000
2     1.000     1.000     1.000
3     1.000     1.000     1.000
4     1.000     1.000     1.000
5     1.000     1.000     1.000

                       LOWER     LEVEL     UPPER

---- EQU logic1         1.000     1.000     1.000
---- EQU logic2         1.000     1.000     1.000

  logic1  There is only one 'final' reactor in the superstructure
  logic2  There is only one recycle location

---- EQU logic3  The recycle can be located at n if there is a reaction operatio
                 n

     LOWER     LEVEL     UPPER

1     -INF     -1.000      .
2     -INF     -1.000      .
3     -INF     -1.000      .
4     -INF     -1.000      .
5     -INF       .         .

---- EQU net_rate  Reactor Network: Reaction rates

       LOWER     LEVEL     UPPER

A.1      .    -4.546E-6      .
A.2      .    -6.685E-6      .
A.3      .    -2.831E-6      .
A.4      .    -8.470E-6      .
A.5      .    -4.732E-6      .
B.1      .         .         .
B.2      .         .         .
B.3      .         .         .
B.4      .         .         .
B.5      .         .         .

---- EQU net_comp  Reactor Network: Component molar balance

       LOWER     LEVEL     UPPER

A.1      .    -4.211E-6      .
A.2      .    -1.348E-7      .
A.3      .    -6.642E-8      .
A.4      .    -1.566E-7      .
B.1      .    -2.654E-6      .
B.2      .    -7.477E-6      .
B.3      .    -3.684E-6      .
B.4      .    -8.685E-6      .

---- EQU net_cont  Reactor Network: continuity equation

     LOWER     LEVEL     UPPER

1      .         .         .
2      .         .         .
3      .         .         .
4      .         .         .

---- EQU feed_comp  Feed unit: Component molar balance

       LOWER     LEVEL     UPPER

A.5    -0.990    -0.990    -0.990
B.5    -0.010    -0.010    -0.010

---- EQU feed_cont  Feed unit: continuity equation

     LOWER     LEVEL     UPPER

5    -1.000    -1.000    -1.000

---- EQU spl_comp  Splitter: Component molar balance

     LOWER     LEVEL     UPPER

A      .         .         .
B      .         .         .

                       LOWER     LEVEL     UPPER

---- EQU spl_cont        .         .         .

  spl_cont  Splitter: continuity equation

---- EQU spl_ad  Splitter: additional splitter constraints

     LOWER     LEVEL     UPPER

A      .    -9.190E-8      .
B      .         .         .

---- EQU eqvol

     LOWER     LEVEL     UPPER

2      .         .         .
3      .         .         .
4      .         .         .
5      .         .         .

                       LOWER     LEVEL     UPPER

---- EQU qual            .         .         .
---- EQU Fobj            .         .         .

---- VAR yf  Location of the last reactor (feed reactor) in the superstructure

     LOWER     LEVEL     UPPER

1      .         .        1.000
2      .         .        1.000
3      .         .        1.000
4      .         .        1.000
5      .        1.000     1.000

---- VAR yr  Location of the recycle flow

     LOWER     LEVEL     UPPER

1      .         .        1.000
2      .         .        1.000
3      .         .        1.000
4      .         .        1.000
5      .        1.000     1.000

---- VAR yp  Unit operation. 1: Reaction. 0: Simple input-output

     LOWER     LEVEL     UPPER

1      .        1.000     +INF
2      .        1.000     +INF
3      .        1.000     +INF
4      .        1.000     +INF
5      .        1.000     +INF

---- VAR Q  Outlet flow rate of the superstricture unit [L/s]

     LOWER     LEVEL     UPPER

1      .        1.094    10.000
2      .        1.094    10.000
3      .        1.094    10.000
4      .        1.094    10.000
5      .        1.094    10.000

---- VAR F  Molar flow [mol/s]

       LOWER     LEVEL     UPPER

A.1      .        0.055    10.000
A.2      .        0.113    10.000
A.3      .        0.226    10.000
A.4      .        0.427    10.000
A.5      .        0.719    10.000
B.1      .        1.040    10.000
B.2      .        0.981    10.000
B.3      .        0.868    10.000
B.4      .        0.667    10.000
B.5      .        0.376    10.000

---- VAR rate  Reaction rate [mol/(L*s)]

       LOWER     LEVEL     UPPER

A.1   -10.000    -0.095    10.000
A.2   -10.000    -0.185    10.000
A.3   -10.000    -0.328    10.000
A.4   -10.000    -0.476    10.000
A.5   -10.000    -0.451    10.000
B.1   -10.000     0.095    10.000
B.2   -10.000     0.185    10.000
B.3   -10.000     0.328    10.000
B.4   -10.000     0.476    10.000
B.5   -10.000     0.451    10.000

---- VAR V  Reactor volume [L]

     LOWER     LEVEL     UPPER

1      .        0.612    10.000
2      .        0.612    10.000
3      .        0.612    10.000
4      .        0.612    10.000
5      .        0.612    10.000

                       LOWER     LEVEL     UPPER

---- VAR QR              .        0.094    10.000
---- VAR QP              .        1.000    10.000

  QR  Recycle flow rate  [L/s]
  QP  Product flow rate  [L/s]

---- VAR R  Recycle molar flow [mol/s]

     LOWER     LEVEL     UPPER

A      .        0.005    10.000
B      .        0.090    10.000

---- VAR P  Product molar flow [mol/s]

     LOWER     LEVEL     UPPER

A      .        0.050    10.000
B      .        0.950    10.000

                       LOWER     LEVEL     UPPER

---- VAR zobj           -INF      3.062     +INF


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
                             1  PROJECTED
GAMS 28.1.0  r5b48834 Released Aug  2, 2019 WEX-WEI x86 64bit/MS Windows 09/13/19 01:21:39 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE SUP_CSTR Using MINLP From line 135


**** SOLVER STATUS FILE LISTED BELOW
=0GAMS/BARON       28.1.0 r5b48834 Released Aug 02, 2019 WEI x86 64bit/MS Window
=C
=CGAMS/BARON       28.1.0 r5b48834 Released Aug 02, 2019 WEI x86 64bit/MS Window
=C
=CBARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
=CParts of the BARON software were created at the
=CUniversity of Illinois at Urbana-Champaign.
=C
=C--- Using Option File
=CReading parameter(s) from "C:\Users\bernalde\Documents\gamsdir\projdir\baron.o
                                                                             pt"
=C>>  *WantDual 1
=C>>  *FirstFeas 1
=C>>  *NumSol 10
=C>>  *results 1
=C>>  *ResName "sumary.dat"
=C>>  *EpsR 0.0001
=CFinished reading from "C:\Users\bernalde\Documents\gamsdir\projdir\baron.opt"
 C:\Users\bernalde\Documents\gamsdir\projdir\225f\sum.dat    = problem    47 51
1510 110  3.06154072906      3.06154073212     1 1 0 121844 8998 311 406.96 409.
                                                                             67
 skip       = 47
 skip       = 51
 skip       = 1510
 skip       = 110
 zlbest     = 3.06154072906
 zub        = 3.06154073212
 barstatus  = 1
 modelstatus= 1
 missingbnd = 0
 itera      = 121844
 nodeopt    = 8998
 nodememmax = 311
 totaltime  = 409.67
=9_
_2
===========================================================================
 BARON version 19.7.13. Built: WIN-64 Sat Jul 13 11:49:21 EDT 2019

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as:

 Kilinc, M. and N. V. Sahinidis, Exploiting integrality in the global
 optimization of mixed-integer nonlinear programming problems in BARON,
 Optimization Methods and Software, 33, 540-562, 2018.
_2
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: ILOG CPLEX
 For NLP: MINOS, SNOPT, GAMS external NLP, IPOPT, FILTERSD, FILTERSQP
_2
===========================================================================
    The options used in solving the problem are as follows:
       maxtime        =  0.1800E+05
       maxiter        =      -1
       numsol         =       1
       firstfeas      =      -1
       firstloc       =       F
       cutoff         =  0.1000E+52
       epsa           =  0.1000E-08
       epsr           =  0.1000E-08
       deltaterm      =       0
       deltaa         =  0.1000E+52
       deltar         =  0.1000E+01
       deltat         = -0.1000E+03
       boxtol         =  0.1000E-07
       isoltol        =  0.1000E-03
       absconfeastol  =  0.1000E-04
       relconfeastol  =  0.0000E+00
       absintfeastol  =  0.1000E-04
       relintfeastol  =  0.0000E+00
       results        =       1
       summary        =       1
       times          =       1
       prtimefreq     =  0.3000E+02
       prfreq         = 1000000
       prlevel        =       1
       numprint       =      51
       numprintdual   =      -1
       lpsol          =       3
       nlpsol         =      -1
       allowminos     =       T
       allowcplexnlp  =       F
       allowsnopt     =       T
       allowexternal  =       T
       allowipopt     =       T
       allowfiltersd  =       T
       allowfiltersqp =       T
       dolocal        =       1
       numloc         =      20
       locres         =       0
       pdo            =      -2
       brvarstra      =       0
       brptstra       =       0
       nodesel        =       0
       compiis        =       0
       iisint         =       1
       iisorder       =      -1
       threads        =       1
_2
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value  9.89473684211
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value  3.13019813303
 Preprocessing found feasible solution with value  3.06201457665
 Done with local search
_2
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1             0.11     0.940000E-01     3.06201
*      8734           185            14.28     0.168321         3.06200
*      8767           185            14.38     0.168321         3.06199
*      8812           190            14.47     0.168321         3.06196
*      8998           203            14.89     0.186298         3.06154
      24695           290            43.78     0.448412         3.06154
      36919           148            73.41     0.748790         3.06154
      48284            65           103.41     1.42256          3.06154
      58509           127           133.39     1.51623          3.06154
      67609            98           163.39     1.86071          3.06154
      75676            79           193.38     1.89173          3.06154
      83282            32           223.34     2.31601          3.06154
      89919            22           253.30     2.33411          3.06154
      96775           130           283.30     2.33411          3.06154
     103122           207           313.30     2.33411          3.06154
     109332           166           343.31     2.33411          3.06154
     115217           138           373.30     2.34818          3.06154
     121094            30           403.25     2.39872          3.06154
     121844             0           406.97     3.06154          3.06154

 Cleaning up

                         *** Normal completion ***

 Wall clock time:                   409.68
 Total CPU time used:               406.97

 Total no. of BaR iterations:  121844
 Best solution found at node:    8998
 Max. no. of nodes in memory:     311

 All done
_2
===========================================================================
_9=
 reset missingbounds to 0
=C
=C===========================================================================
=C BARON version 19.7.13. Built: WIN-64 Sat Jul 13 11:49:21 EDT 2019
=C
=C BARON is a product of The Optimization Firm.
=C For information on BARON, see https://minlp.com/about-baron
=C
=C If you use this software, please cite publications from
=C https://minlp.com/baron-publications, such as:
=C
=C Kilinc, M. and N. V. Sahinidis, Exploiting integrality in the global
=C optimization of mixed-integer nonlinear programming problems in BARON,
=C Optimization Methods and Software, 33, 540-562, 2018.
=C===========================================================================
=C This BARON run may utilize the following subsolver(s)
=C For LP/MIP/QP: ILOG CPLEX
=C For NLP: MINOS, SNOPT, GAMS external NLP, IPOPT, FILTERSD, FILTERSQP

=C
=CSolution      = 3.06154073212274  found at node 8998
=CBest possible = 3.06154072906
=CAbsolute gap  = 3.06274072769952E-9  optca = 1E-9
=CRelative gap  = 1.00039195806353E-9  optcr = 1E-9
=C  (Note that BARON uses a different formula to compute the relative gap as
=C   was used for the above reported value.)
=C
**** SOLVER STATUS FILE LISTED ABOVE
GAMS 28.1.0  r5b48834 Released Aug  2, 2019 WEX-WEI x86 64bit/MS Windows 09/13/19 01:21:39 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE SUP_CSTR Using MINLP From line 135


EXECUTION TIME       =        0.000 SECONDS      2 MB  28.1.0 r5b48834 WEX-WEI


USER: Eval License Carnegie Mellon University        G190206/0001AB-GEN
      Dept. of Chemical Engineering                              DC9476
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\bernalde\Documents\gamsdir\projdir\CSTR_2.gms
Output     C:\Users\bernalde\Documents\gamsdir\projdir\CSTR_2.lst
